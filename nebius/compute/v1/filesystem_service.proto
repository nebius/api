syntax = "proto3";

package nebius.compute.v1;

import "nebius/common/v1/metadata.proto";
import "nebius/common/v1/operation.proto";
import "nebius/common/v1/operation_service.proto";
import "nebius/compute/v1/filesystem.proto";
import "nebius/compute/v1/operation_service.proto";

option go_package = "github.com/nebius/gosdk/proto/nebius/compute/v1";
option java_multiple_files = true;
option java_outer_classname = "FilesystemServiceProto";
option java_package = "ai.nebius.pub.compute.v1";

service FilesystemService {
  // Retrieves information about a filesystem by its ID.
  rpc Get(GetFilesystemRequest) returns (Filesystem);

  // Retrieves information about a filesystem by its parent and name.
  rpc GetByName(common.v1.GetByNameRequest) returns (Filesystem);

  // Lists all filesystems within a specified parent.
  rpc List(ListFilesystemsRequest) returns (ListFilesystemsResponse);

  // Creates a new filesystem with the specified configuration.
  // For details, see https://docs.nebius.com/compute/storage/manage
  rpc Create(CreateFilesystemRequest) returns (common.v1.Operation);

  // Updates an existing filesystem with new configuration parameters.
  // For details, see https://docs.nebius.com/compute/storage/manage#parameters
  rpc Update(UpdateFilesystemRequest) returns (common.v1.Operation);

  // Deletes a disk by its ID.
  rpc Delete(DeleteFilesystemRequest) returns (common.v1.Operation);

  // Lists all operations that were performed within a specific parent resource.
  rpc ListOperationsByParent(ListOperationsByParentRequest) returns (common.v1.ListOperationsResponse);
}

message GetFilesystemRequest {
  string id = 1;
}

message ListFilesystemsRequest {
  string parent_id = 1;

  int64 page_size = 2;

  string page_token = 3;

  string filter = 4;
}

message CreateFilesystemRequest {
  common.v1.ResourceMetadata metadata = 1;

  FilesystemSpec spec = 2;
}

message UpdateFilesystemRequest {
  common.v1.ResourceMetadata metadata = 1;

  FilesystemSpec spec = 2;
}

message DeleteFilesystemRequest {
  string id = 1;
}

message ListFilesystemsResponse {
  repeated Filesystem items = 1;

  string next_page_token = 2;
}
