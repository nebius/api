syntax = "proto3";

package nebius.compute.v1;

import "nebius/common/v1/metadata.proto";
import "nebius/common/v1/operation.proto";
import "nebius/common/v1/operation_service.proto";
import "nebius/compute/v1/disk.proto";
import "nebius/compute/v1/operation_service.proto";

option go_package = "github.com/nebius/gosdk/proto/nebius/compute/v1";
option java_multiple_files = true;
option java_outer_classname = "DiskServiceProto";
option java_package = "ai.nebius.pub.compute.v1";

service DiskService {
  // Retrieves information about a disk by its ID.
  rpc Get(GetDiskRequest) returns (Disk);

  // Retrieves information about a disk by its parent and name.
  rpc GetByName(common.v1.GetByNameRequest) returns (Disk);

  // Lists all disks within a specified parent.
  rpc List(ListDisksRequest) returns (ListDisksResponse);

  // Creates a new disk with the specified configuration.
  // For details, see https://docs.nebius.com/compute/storage/manage
  rpc Create(CreateDiskRequest) returns (common.v1.Operation);

  // Updates an existing disk with new configuration parameters.
  // For details, see https://docs.nebius.com/compute/storage/manage#parameters
  rpc Update(UpdateDiskRequest) returns (common.v1.Operation);

  // Deletes a disk by its ID.
  rpc Delete(DeleteDiskRequest) returns (common.v1.Operation);

  // Lists all operations that were performed within a specific parent resource.
  rpc ListOperationsByParent(ListOperationsByParentRequest) returns (common.v1.ListOperationsResponse);
}

message GetDiskRequest {
  string id = 1;
}

message ListDisksRequest {
  string parent_id = 1;

  int64 page_size = 2;

  string page_token = 3;

  string filter = 4;
}

message CreateDiskRequest {
  common.v1.ResourceMetadata metadata = 1;

  DiskSpec spec = 2;
}

message UpdateDiskRequest {
  common.v1.ResourceMetadata metadata = 1;

  DiskSpec spec = 2;
}

message DeleteDiskRequest {
  string id = 1;
}

message ListDisksResponse {
  repeated Disk items = 1;

  string next_page_token = 2;
}
