syntax = "proto3";

package nebius.registry.v1;

import "buf/validate/validate.proto";
import "nebius/annotations.proto";
import "nebius/common/v1/metadata.proto";
import "nebius/common/v1/operation.proto";
import "nebius/registry/v1/registry.proto";

option go_package = "github.com/nebius/gosdk/proto/nebius/registry/v1";
option java_multiple_files = true;
option java_outer_classname = "RegistryServiceProto";
option java_package = "ai.nebius.pub.registry.v1";

service RegistryService {
  option (api_service_name) = "registry";

  rpc Get(GetRegistryRequest) returns (Registry);

  rpc List(ListRegistriesRequest) returns (ListRegistriesResponse);

  rpc Create(CreateRegistryRequest) returns (common.v1.Operation);

  rpc Update(UpdateRegistryRequest) returns (common.v1.Operation);

  rpc Delete(DeleteRegistryRequest) returns (common.v1.Operation);
}

message GetRegistryRequest {
  string id = 1 [(buf.validate.field).required = true];
}

message ListRegistriesRequest {
  string parent_id = 1;

  int64 page_size = 2;

  string page_token = 3;

  string filter = 4;
}

message ListRegistriesResponse {
  repeated Registry items = 1;

  string next_page_token = 2;
}

message CreateRegistryRequest {
  common.v1.ResourceMetadata metadata = 1;

  RegistrySpec spec = 2;
}

message UpdateRegistryRequest {
  common.v1.ResourceMetadata metadata = 1;

  RegistrySpec spec = 2;
}

message DeleteRegistryRequest {
  string id = 1 [(buf.validate.field).required = true];
}
