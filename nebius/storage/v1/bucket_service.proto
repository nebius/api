syntax = "proto3";

package nebius.storage.v1;

import "buf/validate/validate.proto";
import "nebius/annotations.proto";
import "nebius/common/v1/metadata.proto";
import "nebius/common/v1/operation.proto";
import "nebius/storage/v1/bucket.proto";

option go_package = "github.com/nebius/gosdk/proto/nebius/storage/v1";
option java_multiple_files = true;
option java_outer_classname = "BucketServiceProto";
option java_package = "ai.nebius.pub.storage.v1";

service BucketService {
  option (api_service_name) = "cpl.storage";

  rpc Get(GetBucketRequest) returns (Bucket);

  rpc GetByName(GetBucketByNameRequest) returns (Bucket);

  rpc List(ListBucketsRequest) returns (ListBucketsResponse);

  rpc Create(CreateBucketRequest) returns (common.v1.Operation);

  rpc Update(UpdateBucketRequest) returns (common.v1.Operation);

  rpc Delete(DeleteBucketRequest) returns (common.v1.Operation);
}

message GetBucketRequest {
  string id = 1 [(buf.validate.field).required = true];

  // By default, only CREATING and ACTIVE buckets are visible.
  // DEPRECATED: soft-deleted buckets are shown by default.
  bool with_deleted = 2 [deprecated = true];
}

message GetBucketByNameRequest {
  string parent_id = 1;

  string name = 2;

  // By default, only CREATING and ACTIVE buckets are visible.
  // DEPRECATED: soft-deleted buckets are shown by default.
  bool with_deleted = 3 [deprecated = true];
}

message CreateBucketRequest {
  common.v1.ResourceMetadata metadata = 1 [(buf.validate.field).required = true];

  BucketSpec spec = 2 [(field_behavior) = NON_EMPTY_DEFAULT];
}

message UpdateBucketRequest {
  common.v1.ResourceMetadata metadata = 1 [(buf.validate.field).required = true];

  BucketSpec spec = 2 [(buf.validate.field).required = true];
}

message DeleteBucketRequest {
  string id = 1 [(buf.validate.field).required = true];
}

message ListBucketsRequest {
  // Represents the container ID.
  string parent_id = 1 [(buf.validate.field).required = true];

  // Specifies the maximum number of items to return in the response.
  int64 page_size = 2;

  // Token for pagination, allowing the retrieval of the next set of results.
  string page_token = 3;

  // A filter to narrow down the results based on specific criteria.
  string filter = 4;

  // By default, only CREATING and ACTIVE buckets are shown.
  // DEPRECATED: soft-deleted buckets are shown by default.
  bool with_deleted = 5 [deprecated = true];
}

message ListBucketsResponse {
  // List of buckets returned in the response. The field should be named as `items` for consistency.
  repeated Bucket items = 1;

  // Token for pagination, indicating the next set of results can be retrieved using this token.
  string next_page_token = 2;
}
