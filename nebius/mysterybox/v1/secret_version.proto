syntax = "proto3";

import "buf/validate/validate.proto";
import "google/protobuf/timestamp.proto";
import "nebius/common/v1/metadata.proto";
import "nebius/annotations.proto";
import "nebius/mysterybox/v1/payload.proto";

package nebius.mysterybox.v1;

option go_package = "github.com/nebius/gosdk/proto/nebius/mysterybox/v1";
option java_multiple_files = true;
option java_outer_classname = "SecretVersionProto";
option java_package = "ai.nebius.pub.mysterybox.v1";

message SecretVersion {
  option (resource_behavior) = UNNAMED;

  common.v1.ResourceMetadata metadata = 1;

  SecretVersionSpec spec = 2;

  // The status of the secret version.
  SecretVersionStatus status = 3 [(field_behavior) = OUTPUT_ONLY];
}

message SecretVersionSpec {
  // Description of the version.
  string description = 1 [(field_behavior) = IMMUTABLE];

  // Payload entries related to the version.
  repeated Payload payload = 2 [
    (field_behavior) = INPUT_ONLY,
    (field_behavior) = IMMUTABLE,
    (buf.validate.field).required = true
  ];

  bool set_primary = 3 [(field_behavior) = INPUT_ONLY];
}

message SecretVersionStatus {
  enum State {
    STATE_UNSPECIFIED = 0;

    // Resource is active, ready for use
    ACTIVE = 1;

    // Resource was marked as soft deleted
    SCHEDULED_FOR_DELETION = 2;
  }

  // State (ACTIVE, SCHEDULED_FOR_DELETION)
  State state = 1;

  // Time when user called soft delete method
  google.protobuf.Timestamp deleted_at = 2;

  // Time when key should be totally deleted from DB
  google.protobuf.Timestamp purge_at = 3;
}
