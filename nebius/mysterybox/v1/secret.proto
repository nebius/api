syntax = "proto3";

package nebius.mysterybox.v1;

import "google/protobuf/timestamp.proto";
import "nebius/common/v1/metadata.proto";
import "nebius/annotations.proto";
import "nebius/mysterybox/v1/secret_version.proto";

option go_package = "github.com/nebius/gosdk/proto/nebius/mysterybox/v1";
option java_multiple_files = true;
option java_outer_classname = "SecretProto";
option java_package = "ai.nebius.pub.mysterybox.v1";

message Secret {
  common.v1.ResourceMetadata metadata = 1;

  // The specifications for creating a secret.
  SecretSpec spec = 2;

  // The status of the secret.
  SecretStatus status = 3 [(field_behavior) = OUTPUT_ONLY];
}

message SecretSpec {
  // Description of the secret.
  string description = 1;

  // Specifies the primary version of the secret to update its payload. This parameter should only be provided during update operations.
  optional string primary_version_id = 3 [(field_behavior) = NON_EMPTY_DEFAULT];

  // Secret's version specification, defines the secret version, including its payload. This parameter must be specified only during create operations.
  optional SecretVersionSpec secret_version = 4 [(field_behavior) = INPUT_ONLY, (field_behavior) = IMMUTABLE];
}

message SecretStatus {
  enum State {
    STATE_UNSPECIFIED = 0;

    // Resource is active, ready for use
    ACTIVE = 1;

    // Resource was marked as soft deleted
    SCHEDULED_FOR_DELETION = 2;
  }

  // State (ACTIVE, SCHEDULED_FOR_DELETION)
  State state = 1;

  // Time when user called soft delete method
  google.protobuf.Timestamp deleted_at = 2;

  // Time when key should be totally deleted from DB
  google.protobuf.Timestamp purge_at = 3;

  string effective_kms_key_id = 4;
}
