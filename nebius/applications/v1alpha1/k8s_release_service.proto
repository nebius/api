syntax = "proto3";

package nebius.applications.v1alpha1;

import "buf/validate/validate.proto";
import "nebius/annotations.proto";
import "nebius/applications/v1alpha1/k8s_release.proto";
import "nebius/common/v1/metadata.proto";
import "nebius/common/v1/operation.proto";

option go_package = "github.com/nebius/gosdk/proto/nebius/applications/v1alpha1";
option java_multiple_files = true;
option java_outer_classname = "K8SReleaseServiceProto";
option java_package = "ai.nebius.pub.applications.v1alpha1";

service K8sReleaseService {
  option (api_service_name) = "deployment-manager.mkt";

  rpc Get(GetK8sReleaseRequest) returns (K8sRelease);

  rpc List(ListK8sReleasesRequest) returns (ListK8sReleasesResponse);

  rpc Create(CreateK8sReleaseRequest) returns (common.v1.Operation);

  rpc Delete(DeleteK8sReleaseRequest) returns (common.v1.Operation);
}

message GetK8sReleaseRequest {
  string id = 1 [(buf.validate.field).required = true];
}

message ListK8sReleasesRequest {
  string parent_id = 1 [(buf.validate.field).required = true];

  int64 page_size = 2;

  string page_token = 3;

  string filter = 4;

  string cluster_id = 5 [(buf.validate.field).required = true];
}

message CreateK8sReleaseRequest {
  common.v1.ResourceMetadata metadata = 1;

  K8sReleaseSpec spec = 2;
}

message DeleteK8sReleaseRequest {
  string id = 1 [(buf.validate.field).required = true];
}

message ListK8sReleasesResponse {
  repeated K8sRelease items = 1;

  string next_page_token = 2;
}
