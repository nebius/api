syntax = "proto3";

package nebius.iam.v1;

import "buf/validate/validate.proto";
import "google/protobuf/timestamp.proto";
import "nebius/annotations.proto";
import "nebius/common/v1/metadata.proto";
import "nebius/iam/v1/service_account.proto";
import "nebius/iam/v1/tenant_user_account.proto";

option go_package = "github.com/nebius/gosdk/proto/nebius/iam/v1";
option java_multiple_files = true;
option java_outer_classname = "GroupMembershipProto";
option java_package = "ai.nebius.pub.iam.v1";

message GroupMembership {
  option (resource_behavior) = UNNAMED;

  common.v1.ResourceMetadata metadata = 1 [(buf.validate.field).required = true];

  GroupMembershipSpec spec = 2 [(buf.validate.field).required = true];

  GroupMembershipStatus status = 3 [(field_behavior) = OUTPUT_ONLY]; // Dummy field for compliance with terraform resource generator.

  google.protobuf.Timestamp revoke_at = 4 [(field_behavior) = OUTPUT_ONLY];
}

message GroupMembershipSpec {
  // Member of the group. Can be tenant user account id or service account id.
  string member_id = 1 [(field_behavior) = IMMUTABLE];
}

message GroupMembershipStatus {
}

message GroupMemberKind {
  enum Kind {
    KIND_UNSPECIFIED = 0;

    ORDINARY_TENANT_USER_ACCOUNT = 1;

    INVITED_TENANT_USER_ACCOUNT = 2;

    SERVICE_ACCOUNT = 3;
  }

  Kind kind = 1;
}

// see also nebius/iam/v1/tenant_user_account.proto/TenantUserAccountWithAttributes
message GroupMembershipWithAttributes {
  GroupMembership group_membership = 1;

  GroupMemberKind group_member_kind = 11;

  oneof attributesOptional {
    // filled with known data for members corresponding to tenant user accounts and provisional tenant user accounts (invitees)
    // left unset for service accounts
    UserAttributes user_attributes = 2;

    // filled with known data for members corresponding to service accounts
    // left unset for any kind of tenant user accounts
    ServiceAccountAttributes service_account_attributes = 3;

    // in a case of issues of getting attributes from pds service, we can still return some data from cpl
    Error error = 99;
  }
}
