syntax = "proto3";

package nebius.iam.v1;

import "nebius/annotations.proto";
import "nebius/iam/v1/container.proto";

option go_package = "github.com/nebius/gosdk/proto/nebius/iam/v1";
option java_multiple_files = true;
option java_outer_classname = "TenantServiceProto";
option java_package = "ai.nebius.pub.iam.v1";

service TenantService {
  option (api_service_name) = "cpl.iam";

  rpc Get(GetTenantRequest) returns (Container);

  rpc List(ListTenantsRequest) returns (ListTenantsResponse);
}

message GetTenantRequest {
  string id = 1;
}

message ListTenantsRequest {
  // Specifies the maximum number of items to return in the response.
  // Default value: 10
  optional int64 page_size = 1;

  // Token for pagination, allowing the retrieval of the next set of results.
  string page_token = 2;

  // A filter to narrow down the results based on specific criteria.
  string filter = 3;
}

message ListTenantsResponse {
  repeated Container items = 1;

  // Token for pagination, indicating the next set of results can be retrieved using this token.
  string next_page_token = 2;
}
