syntax = "proto3";

package nebius.iam.v2;

import "buf/validate/validate.proto";
import "google/protobuf/timestamp.proto";
import "nebius/common/v1/metadata.proto";
import "nebius/annotations.proto";
import "nebius/iam/v1/access.proto";

option go_package = "github.com/nebius/gosdk/proto/nebius/iam/v2";
option java_multiple_files = true;
option java_outer_classname = "AccessKeyProto";
option java_package = "ai.nebius.pub.iam.v2";

message AccessKey {
  option (resource_behavior) = UNNAMED;

  common.v1.ResourceMetadata metadata = 1 [(buf.validate.field).required = true];

  AccessKeySpec spec = 2 [(buf.validate.field).required = true];

  AccessKeyStatus status = 3 [(field_behavior) = OUTPUT_ONLY];
}

message AccessKeySpec {
  nebius.iam.v1.Account account = 1 [(field_behavior) = IMMUTABLE];

  google.protobuf.Timestamp expires_at = 2 [(field_behavior) = IMMUTABLE];

  string description = 3;

  // Specifies how the secret will be delivered upon creation. This field is immutable â€” it cannot be changed after the resource is created.
  SecretDeliveryMode secret_delivery_mode = 4 [(field_behavior) = IMMUTABLE];
}

enum SecretDeliveryMode {
  // If not specified, the default behaviour will be applied. Currently it's INLINE, later will be EXPLICIT.
  UNSPECIFIED = 0;

  // The secret value will be returned directly in the API response
  INLINE = 1;

  // The secret will be delivered via a MysteryBox secret, in case of terraform it is recommended to use that enum
  MYSTERY_BOX = 2;

  // The secret value will be accessible via a separate method GetSecret
  EXPLICIT = 3;
}

message AccessKeyStatus {
  enum State {
    STATE_UNSPECIFIED = 0;

    ACTIVE = 1;

    INACTIVE = 2;

    EXPIRED = 3;

    DELETING = 4;

    DELETED = 5;
  }

  State state = 1;

  string fingerprint = 2;

  string algorithm = 3;

  int32 key_size = 4;

  string aws_access_key_id = 5;

  string secret = 6 [(sensitive) = true];

  string secret_reference_id = 7;
}
