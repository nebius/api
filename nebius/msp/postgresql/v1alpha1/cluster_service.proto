syntax = "proto3";

package nebius.msp.postgresql.v1alpha1;

import "buf/validate/validate.proto";
import "nebius/msp/postgresql/v1alpha1/cluster.proto";
import "nebius/common/v1/metadata.proto";
import "nebius/common/v1alpha1/operation.proto";
import "nebius/annotations.proto";

option go_package = "github.com/nebius/gosdk/proto/nebius/msp/postgresql/v1alpha1";
option java_multiple_files = true;
option java_outer_classname = "ClusterServiceProto";
option java_package = "ai.nebius.pub.msp.postgresql.v1alpha1";

// A set of methods for managing PostgreSQL Cluster resources.
service ClusterService {
  option (api_service_name) = "postgresql.msp";

  // Returns the specified PostgreSQL Cluster resource.
  // To get the list of available PostgreSQL Cluster resources, make a [List] request.
  rpc Get(GetClusterRequest) returns (Cluster);

  // Returns the specified PostgreSQL Cluster resource by name.
  rpc GetByName(common.v1.GetByNameRequest) returns (Cluster);

  // Retrieves the list of PostgreSQL Cluster resources that belong
  // to the specified folder.
  rpc List(ListClustersRequest) returns (ListClustersResponse);

  // Creates a PostgreSQL cluster in the specified folder.
  rpc Create(CreateClusterRequest) returns (common.v1alpha1.Operation);

  // Deletes the specified PostgreSQL cluster.
  rpc Delete(DeleteClusterRequest) returns (common.v1alpha1.Operation);

  // Updates the PostgreSQL cluster.
  rpc Update(UpdateClusterRequest) returns (common.v1alpha1.Operation);

  // Creates a new PostgreSQL cluster from a previously created backup.
  rpc Restore(RestoreClusterRequest) returns (common.v1alpha1.Operation);

  // Suspends the PostgreSQL cluster to save resources.
  rpc Stop(StopClusterRequest) returns (common.v1alpha1.Operation);

  // Wakes up suspended PostgreSQL cluster.
  rpc Start(StartClusterRequest) returns (common.v1alpha1.Operation);
}

message GetClusterRequest {
  // ID of the PostgreSQL Cluster resource to return.
  // To get the cluster ID use a [ClusterService.List] request.
  string id = 1 [(buf.validate.field).required = true];
}

message ListClustersRequest {
  // Identifier of IAM container to list clusters from.
  string parent_id = 1 [(buf.validate.field).required = true];

  // Specifies the maximum number of items to return in the response.
  int64 page_size = 2;

  // Token for pagination, allowing the retrieval of the next set of results.
  string page_token = 3;
}

message ListClustersResponse {
  // List of PostgreSQL Cluster resources.
  repeated Cluster clusters = 1;

  // This token allows you to get the next page of results for list requests. If the number of results
  // is larger than [ListClustersRequest.page_size], use the [next_page_token] as the value
  // for the [ListClustersRequest.page_token] parameter in the next list request. Each subsequent
  // list request will have its own [next_page_token] to continue paging through the results.
  string next_page_token = 2;
}

message CreateClusterRequest {
  // Metadata associated with the new cluster.
  common.v1.ResourceMetadata metadata = 1 [(buf.validate.field).required = true];

  // Specification for the new cluster.
  ClusterSpec spec = 2 [(buf.validate.field).required = true];
}

message RestoreClusterRequest {
  // Metadata associated with the new cluster.
  common.v1.ResourceMetadata metadata = 1 [(buf.validate.field).required = true];

  // Specification for the new cluster.
  ClusterSpec spec = 2 [(buf.validate.field).required = true];

  // ID of the backup to restore from.
  string backup_id = 3 [(buf.validate.field).required = true];

  // ID of the PostgreSQL cluster to restore from.
  string source_cluster_id = 4 [(buf.validate.field).required = true];
}

message DeleteClusterRequest {
  // ID of the PostgreSQL cluster to delete.
  // To get the PostgreSQL cluster ID, use a [ClusterService.List] request.
  string id = 1;
}

message UpdateClusterRequest {
  // Metadata associated with the cluster. Must include id of the cluster we are going to update.
  common.v1.ResourceMetadata metadata = 1 [(buf.validate.field).required = true];

  // Updated specification for the cluster.
  ClusterSpec spec = 2;
}

message StopClusterRequest {
  // ID of the PostgreSQL Cluster resource to pause.
  // To get the cluster ID use a [ClusterService.List] request.
  string id = 1 [(buf.validate.field).required = true];
}

message StartClusterRequest {
  // ID of the PostgreSQL Cluster resource to resume.
  // To get the cluster ID use a [ClusterService.List] request.
  string id = 1 [(buf.validate.field).required = true];
}
