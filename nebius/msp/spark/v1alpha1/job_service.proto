syntax = "proto3";

package nebius.msp.spark.v1alpha1;

import "buf/validate/validate.proto";
import "nebius/common/v1/metadata.proto";
import "nebius/common/v1/operation.proto";
import "nebius/annotations.proto";
import "nebius/msp/spark/v1alpha1/job.proto";

option go_package = "github.com/nebius/gosdk/proto/nebius/msp/spark/v1alpha1";
option java_multiple_files = true;
option java_outer_classname = "JobServiceProto";
option java_package = "ai.nebius.pub.msp.spark.v1alpha1";

service JobService {
  option (api_service_name) = "sp.msp";

  // Returns the specified job.
  rpc Get(GetJobRequest) returns (Job);

  // Retrieves a list of jobs.
  rpc List(ListJobsRequest) returns (ListJobsResponse);

  // Creates a job.
  rpc Create(CreateJobRequest) returns (common.v1.Operation);

  // Cancel the job.
  rpc Cancel(CancelJobRequest) returns (common.v1.Operation);
}

message GetJobRequest {
  // ID of the job to retrieve.
  string id = 1 [(buf.validate.field).required = true];
}

message ListJobsRequest {
  // Identifier of IAM container to list jobs from.
  string parent_id = 1 [(buf.validate.field).required = true];

  // Specifies the maximum number of items to return in the response. Default value is 100.
  int64 page_size = 2 [(buf.validate.field) = { int64: { gte: 0 } }];

  // Token for pagination, allowing the retrieval of the next set of results.
  string page_token = 3;
}

message ListJobsResponse {
  // List of jobs.
  repeated Job items = 1;

  // Token for pagination, indicating the next set of results can be retrieved using this token.
  optional string next_page_token = 2;
}

message CreateJobRequest {
  option (buf.validate.message) = {
    cel: [
      {
        id: "create_job.metadata",
        message: "'metadata' must have 'parent_id' and 'name'",
        expression: "has(this.metadata.parent_id) && has(this.metadata.name)"
      }
    ]
  };

  // Metadata associated with the new job. Must include parent_id - ID of the cluster to create job in.
  common.v1.ResourceMetadata metadata = 1 [(buf.validate.field).required = true];

  // Specification for the new job.
  JobSpec spec = 2 [(buf.validate.field).required = true];
}

message CancelJobRequest {
  // ID of the job to cancel.
  string id = 1 [(buf.validate.field).required = true];
}
